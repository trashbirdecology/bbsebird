model{
  ####################################################
  # BBS 
  ####################################################
  for(i in 1:nobsb){
    Cb[i]  ~  dpois( lambdab[siteb[i], yearb[i]] * 
                     pb[siteb[i], yearb[i]] )
    
      log(lambdab[siteb[i], yearb[i]]) <-  
        inprod(prop[siteb[i],1:G], 
        lambdag[1:G,yearb[i]])             +  
        yeareff[cellb[i], yearb[i]]            +   # year effects
        trend[cellb[i]] * (yearb[i]-ref.year)  +   # trend
        epsb[i]                                    # gaussian noise route-yr
        
      log(pb[siteb[i], yearb[i]])          <-   
        alpha1  *  asst[i]                     +   # assistant    (logical, 1=TRUE)
        alpha2  *  fyr[i]                      +   # first year   (logical, 1=TRUE)
        obseff[obsrb[i]]                           # observer id
  }
  
  
  ####################################################
  # eBird
  ####################################################
  for(i in 1:nobse){
    Ce[i]  ~  dpois( lambdag[celle[i],yeare[i]] * pe[sitee[i], yeare[i]] )
      log(pe[sitee[i],yeare[i]]) <- 
        alpha11  *  party[i]                   +  # number ppl in birding party
        alpha22  *  dist[i]                    +  # distance (scaled km)
        alpha33  *  mins[i]                    +  # num minutes (prob intrx with time of day)
        alpha44  *  starttime[i]                  # minutes after midnight 
      }                                           # note no offroad fixed
  
  ####################################################
  # Expected and Realised Abundance at Grid-Year
  ####################################################
  for(i in 1:ngy){
    N[gy[i,1],gy[i,2]] ~ dpois(lambdag[gy[i,1],gy[i,2]])         
      log(lambdag[gy[i,1], gy[i,2]]) <-   
        hab[ gy[i,1] ]  *  beta1               + 
        inprod( Z[gy[i,1], ] , b[1:G,gy[i,2]] )   # <cell by basis function> <coef by time>
  }
  
  ####################################################
  # Summary Stats/Derived Values
  ####################################################
  # derived from priors
  sdobs     <-  1 / pow(tauobsb, 0.5) # for summary stats
  sdyear    <-  1 / pow(tauyrb,  0.5)
  

  ####################################################
  # Priors (keep at end of model script for speed)
  ## specifying priors helps avoid forward-sampling
  ####################################################
  ### BBS
  beta1         ~  dnorm (0, 1E-3)       # made-up habitat
  alpha1        ~  dnorm (0, 1E-3)       # assistant 
  alpha2        ~  dnorm (0, 1E-3)       # first-year observer effect
  tauobsb       ~  dgamma(1, 1)          # observer hyper
  tauepsb       ~  dgamma(1, 1)          # bbs data model error (eps) hyper
  #### trend
  for(g in 1:G){
    trend[g]     ~  dnorm(0, 1E-6)        # grid-level trend
    log(exptrend[g]) <-  trend[g]
    #### observer effects  
  }
  
  for(i in 1:nobsrb){
    obseff[i] ~ dnorm (0.00, tauobsb)  # observer (id) effects
  }
  
  ##### year effects
  for(g in 1:G){
    for(i in 1:1){ yeareff[g,1] ~ dnorm(0, 1E-3)   }    
    for(t in 2:T){ yeareff[g,t] ~ dnorm(0, tauyrb) }
  }
    log(tauyrb)    <-  logtauyrb
    logtauyrb       ~  dnorm(mu.logtauyrb, tau.logtauyrb)
    mu.logtauyrb    ~  dnorm(0, 0.5)
    tau.logtauyrb   ~  dgamma(2, 0.2)
    
  ### eBird priors
  alpha11  ~ dnorm(0, 0.001)
  alpha22  ~ dnorm(0, 0.001)
  alpha33  ~ dnorm(0, 0.001)
  alpha44  ~ dnorm(0, 0.001)
  alpha44  ~ dnorm(0, 0.001)
  
  for(i in 1:nobsb){
    epsb[i]   ~  dnorm(0, tauepsb)             # bbs data model error
  }
  
  # priors on random effects
  for(t in 1:T){
    for (k in 1:nknots){ b[k,t] ~ dnorm(0, taub) 
      # Prior on random effects hyperparameter
    }
  }
  taub ~ dgamma(0.01,0.01)
  
  
  ## temporal variance hypers
  taugam     <- pow(sigmagam, -2) # check jlb 
  sigmagam    ~ dunif(0, 10)      # check jlb # clark uses in bbs.sdm and paige in MODU ms;why 0,10?
  ## smoothing parameter (lambda) priors check JLB
  rho[1]       ~ dunif(-12,12)    # a and b values suggested by mgcv::jagam
  lambda[1]   <- exp(rho[1])
  
  ####################################################
  ## END MODEL
  ####################################################
} #### KEEP the EMPTY LINE AT ENDING!! IMPORTANT FOR IMPORTING BUGS MOD VIA NIMBLE!!!

